<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Hello World]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://ferstar.github.io/"/>
  <updated>2015-09-02T01:28:28.000Z</updated>
  <id>http://ferstar.github.io/</id>
  
  <author>
    <name><![CDATA[ferstar]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[build rtl8192 usb wireless drivers for nvidia jetson tk1 lt4-21-1 and permanently disable the power management]]></title>
    <link href="http://ferstar.github.io/2015/08/31/build-rtl8192-usb-wireless-drivers-for-nvidia-jetson-tk1-lt4-21-1-and-permanently-disable-the-power-management/"/>
    <id>http://ferstar.github.io/2015/08/31/build-rtl8192-usb-wireless-drivers-for-nvidia-jetson-tk1-lt4-21-1-and-permanently-disable-the-power-management/</id>
    <published>2015-08-31T15:20:43.000Z</published>
    <updated>2015-09-02T01:28:28.000Z</updated>
    <content type="html"><![CDATA[<ul>
<li>download the kernel sources from <a href="http://developer.download.nvidia.com/mobile/tegra/l4t/r21.1.0/sources/kernel_src.tbz2" target="_blank" rel="external">developer.download.nvidia.com</a></li>
<li>decompressed the files into /usr/src, the directory should like this /usr/src/kernel.</li>
<li><code>#zcat /proc/config.gz &gt; /usr/src/kernel/.config</code></li>
</ul>
<a id="more"></a>
<ul>
<li><code>$cd /usr/src/kernel</code></li>
<li><code>#make prepare</code></li>
<li><code>#make modules_prepare</code></li>
<li><code>$cd /the/path/to/the/usb/driver/</code></li>
<li><code>$make ARCH=arm</code></li>
<li><code>#make install</code></li>
<li>block the default rtl8192cu driver</li>
</ul>
<p><code>vi /etc/modprobe.d/blacklist-native-rtl8192.conf</code><br>This file ships with the rtl8192-fixes DKMS module.<br>Blacklist the native (and currently broken) kernel driver so<br>ours gets loaded instead:<br>blacklist rtl8192cu<br>blacklist rtl8192c_common<br>blacklist rtlwifi<br><code>vi /etc/modprobe.d/8192cu.conf</code><br>prevent power down of wireless when idle<br>options 8192cu rtw_power_mgnt=0</p>
<ul>
<li>#reboot the device<br>you can check the status if it is off:<br><code>cat /sys/module/8192cu/parameters/rtw_power_mgnt</code><br>it should be 0 now.</li>
</ul>
<h1 id="well_done!">well done!</h1>]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li>download the kernel sources from <a href="http://developer.download.nvidia.com/mobile/tegra/l4t/r21.1.0/sources/kernel_src.tbz2">developer.download.nvidia.com</a></li>
<li>decompressed the files into /usr/src, the directory should like this /usr/src/kernel.</li>
<li><code>#zcat /proc/config.gz &gt; /usr/src/kernel/.config</code></li>
</ul>]]>
    
    </summary>
    
      <category term="jetson" scheme="http://ferstar.github.io/tags/jetson/"/>
    
      <category term="rtl8192" scheme="http://ferstar.github.io/tags/rtl8192/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[How to get the process ID to kill a nohup process?]]></title>
    <link href="http://ferstar.github.io/2015/08/31/How-to-get-the-process-ID-to-kill-a-nohup-process/"/>
    <id>http://ferstar.github.io/2015/08/31/How-to-get-the-process-ID-to-kill-a-nohup-process/</id>
    <published>2015-08-31T15:19:47.000Z</published>
    <updated>2015-08-31T15:20:21.000Z</updated>
    <content type="html"><![CDATA[<p>When using <code>nohup</code>, it will give you the <code>PID</code> at the command prompt. If your plan is to manually manage the process, you can save that <code>PID</code> and use it later to kill the process if needed, via <code>kill PID</code> or <code>kill -9 PID</code> (if you need to force kill). Alternatively, you can find the PID later on by <code>ps -ef output | grep &quot;command name&quot;</code> and locate the PID from there. Note that nohup does not appear in the ps output.</p>
<p>If you used a script, you could do something like:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nohup my_command &gt; my.<span class="built_in">log</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span>&amp;</span><br><span class="line">echo $! &gt; save_pid.txt</span><br></pre></td></tr></table></figure></p>
<p>This will run my_command saving all output into my.log (in a script, <code>$!</code> represents the PID of the last process executed). If the command sends output on a regular basis, you can check the output occasionally with tail my.log, or if you want to follow it “live” you can use <code>tail -f my.log</code>. Finally, if you need to kill the process, you can do it via:<br><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">kill</span> -<span class="number">9</span> <span class="string">`cat save_pid.txt`</span></span><br></pre></td></tr></table></figure></p>
<p>来源： <a href="http://stackoverflow.com/questions/17385794/how-to-get-the-process-id-to-kill-a-nohup-process" target="_blank" rel="external">http://stackoverflow.com/questions/17385794/how-to-get-the-process-id-to-kill-a-nohup-process</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>When using <code>nohup</code>, it will give you the <code>PID</code> at the command prompt. If your plan is to manually manage the proces]]>
    </summary>
    
      <category term="nohup" scheme="http://ferstar.github.io/tags/nohup/"/>
    
      <category term="process" scheme="http://ferstar.github.io/tags/process/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[树莓派视频监控折腾记录]]></title>
    <link href="http://ferstar.github.io/2015/08/31/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%A7%86%E9%A2%91%E7%9B%91%E6%8E%A7%E6%8A%98%E8%85%BE%E8%AE%B0%E5%BD%95/"/>
    <id>http://ferstar.github.io/2015/08/31/树莓派视频监控折腾记录/</id>
    <published>2015-08-31T15:16:05.000Z</published>
    <updated>2015-08-31T15:18:32.000Z</updated>
    <content type="html"><![CDATA[<p>检查更新<br><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> install rpi-<span class="keyword">update</span></span><br><span class="line">sudo rpi-<span class="keyword">update</span></span><br></pre></td></tr></table></figure></p>
<p>默认的源在国外, 下载速度太慢, 所以需要修改默认源到国内, 试了好几个, 发现公司的网络访问阿里云的源速度不错<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo vi <span class="regexp">/etc/</span>apt/sources.list</span><br><span class="line">deb <span class="string">http:</span><span class="comment">//mirrors.aliyun.com/raspbian/raspbian/ wheezy main non-free contrib</span></span><br><span class="line">deb-src <span class="string">http:</span><span class="comment">//mirrors.aliyun.com/raspbian/raspbian/ wheezy main non-free contrib</span></span><br></pre></td></tr></table></figure></p>
<p>进行更新<br><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> <span class="keyword">update</span></span><br><span class="line">sudo apt-<span class="built_in">get</span> upgrade</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<p><code>注: tf卡居然是4G的, 容量不太够, 需要弄个大点的, 暂时就这样省着点花, 先瘦瘦身
后来发现其实卡是16G的, 只是原版系统是直接写入的镜像, 有大片的空间没用到, 很浪费有没有, 赶紧用gparted把未使用空间划给/rootfs, 瞬间清净, 想咋整就咋整.</code><br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="keyword">get</span> autoremove    <span class="comment">#删除不需要的孤立包</span></span><br><span class="line">sudo apt-<span class="keyword">get</span> clean    <span class="comment"># 删除deb包</span></span><br></pre></td></tr></table></figure></p>
<p>更新操作完毕, 再次查看下更新有无问题<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="keyword">get</span> install -f    <span class="comment"># 如果有安装错误, 修复之</span></span><br></pre></td></tr></table></figure></p>
<p>重启<br><code>sudo reboot</code><br>使用摄像头uv4l原生驱动(系统自带驱动不太给力)<br><a href="http://www.ics.com/blog/raspberry-pi-camera-module" target="_blank" rel="external">http://www.ics.com/blog/raspberry-pi-camera-module</a><br><a href="http://www.linux-projects.org/modules/sections/index.php?op=viewarticle&amp;artid=14" target="_blank" rel="external">http://www.linux-projects.org/modules/sections/index.php?op=viewarticle&amp;artid=14</a><br><code>$ curl http://www.linux-projects.org/listing/uv4l_repo/lrkey.asc | sudo apt-key add -</code><br>在/etc/apt/sources.list添加<br><code>deb http://www.linux-projects.org/listing/uv4l_repo/raspbian/ wheezy main</code><br>更新软件列表&amp;安装摄像头驱动包<br><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> <span class="keyword">update</span></span><br><span class="line">sudo apt-<span class="built_in">get</span> install uv4l uv4l-raspicam uv4l-raspicam-extras</span><br></pre></td></tr></table></figure></p>
<p>着手编译mjpg-streamer<br><code>CFLAGS+=&quot;-O2 -march=armv6 -mfpu=vfp -mfloat-abi=hard&quot; make USE_LIBV4L2=true clean all</code><br>from: <a href="https://github.com/ferstar/rpi-mjpg-streamer" target="_blank" rel="external">https://github.com/ferstar/rpi-mjpg-streamer</a> 当然是fork别人的了<br>mjpg-streamer编译后自带的sample页面比较挫, 把www里的内容换成rpi-mjpg-streamer/www里的<br>现在轮到测试了<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">./mjpg_streamer -i <span class="string">'./input_uvc.so -d /dev/video0 -y -n -r 320x240 -f 24'</span> -o <span class="string">'./output_http.so -w ./www -p 8080'</span></span><br><span class="line">    <span class="comment"># -n 的作用仅仅是屏蔽掉一些乱七八糟的warning提示而已</span></span><br><span class="line">    <span class="comment"># -d /dev/video0 这里指定的是我们摄像头的挂载位置</span></span><br><span class="line">    <span class="comment"># -r 分辨率, 越低实时性越好, 但画质越渣</span></span><br><span class="line">    <span class="comment"># -f 帧率, 貌似最高支持到30</span></span><br><span class="line">    <span class="comment"># -w /www web根目录</span></span><br><span class="line">    <span class="comment"># -p 端口</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># -y 指定视频采集格式为YUYV, 摄像头不支持mpeg格式</span></span><br><span class="line">    <span class="comment"># from http://stackoverflow.com/questions/13437244/mjpg-streaming-with-a-raspberry-pi-and-a-webcam</span></span><br><span class="line">    <span class="comment">#</span></span><br></pre></td></tr></table></figure></p>
<p>正常终端显示如下:<br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">MJPG Streamer Version: svn rev: <span class="number">3</span>:<span class="number">172</span>M</span><br><span class="line"> i: Using V4L2 device<span class="built_in">.</span>: /dev/video0</span><br><span class="line"> i: Desired Resolution: <span class="number">320</span> x <span class="number">240</span></span><br><span class="line"> i: Frames Per Second<span class="built_in">.</span>: <span class="number">24</span></span><br><span class="line"> i: Format<span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span>: YUV</span><br><span class="line"> i: JPEG Quality<span class="attribute">...</span><span class="attribute">...</span>: <span class="number">80</span></span><br><span class="line"> o: www<span class="attribute">-folder</span><span class="attribute">-path</span><span class="attribute">...</span>: <span class="built_in">.</span>/www/</span><br><span class="line"> o: HTTP TCP port<span class="attribute">...</span><span class="built_in">..</span>: <span class="number">8080</span></span><br><span class="line"> o: username:password<span class="built_in">.</span>: disabled</span><br><span class="line"> o: commands<span class="attribute">...</span><span class="attribute">...</span><span class="attribute">...</span><span class="built_in">.</span>: enabled</span><br></pre></td></tr></table></figure></p>
<p>浏览器访问: <a href="http://your.pi&#39;s.ip:8080" target="_blank" rel="external">http://your.pi&#39;s.ip:8080</a> 即可看到监控视频流<br>当然也可以使用VLC播放器播放 <a href="http://your.pi&#39;s.ip:8080/?action=stream" target="_blank" rel="external">http://your.pi&#39;s.ip:8080/?action=stream</a></p>
<p>接下来应该是折腾无线接入了<br>lsusb信息:<br><code>Bus 001 Device 005: ID 0bda:8176 Realtek Semiconductor Corp. RTL8188CUS 802.11n WLAN Adapter</code><br>默认8192cu驱动会有电源管理自动休眠掉线问题, 需要关掉这个功能<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">vi</span> /etc/modprobe.<span class="keyword">d</span>/<span class="number">8192</span><span class="keyword">cu</span>.<span class="keyword">conf</span></span><br><span class="line"><span class="keyword">options</span> <span class="number">8192</span><span class="keyword">cu</span> rtw_power_mgnt=<span class="number">0</span></span><br></pre></td></tr></table></figure></p>
<p>检查下生效没有:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo rmmod <span class="number">8192</span>cu    <span class="preprocessor"># 卸载wifi驱动模块</span></span><br><span class="line">sudo modprobe <span class="number">8192</span>cu    <span class="preprocessor"># 重新挂载</span></span><br><span class="line">cat /sys/module/<span class="number">8192</span>cu/parameters/rtw_power_mgnt    <span class="preprocessor"># 显示为<span class="number">0</span>即表示关闭自动休眠(默认为<span class="number">1</span>开启)</span></span><br></pre></td></tr></table></figure></p>
<p>配置网络连接:<br><code>sudo vi /etc/network/interfaces</code><br>内容如下:<br><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">auto lo</span><br><span class="line">iface lo <span class="keyword">inet</span> loopback</span><br><span class="line">iface eth0 <span class="keyword">inet</span> dhcp</span><br><span class="line">allow-hotplug wlan0</span><br><span class="line">iface wlan0 <span class="keyword">inet</span> manual</span><br><span class="line">wpa-roam /etc/wpa_supplicant/wpa_supplicant.conf</span><br><span class="line">iface <span class="keyword">default</span> <span class="keyword">inet</span> dhcp</span><br><span class="line">iface wlan0 <span class="keyword">inet</span> dhcp</span><br><span class="line">wpa-ssid <span class="string">"xxx"</span>    <span class="comment">#ssid</span></span><br><span class="line">wpa-psk <span class="string">"xxx"</span>    <span class="comment">#passwd</span></span><br></pre></td></tr></table></figure></p>
<p>添加无线信息:<br><code>sudo vi /etc/wpa_supplicant/wpa_supplicant.conf</code><br>内容如下<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ctrl_interface=<span class="keyword">DIR</span>=/<span class="keyword">var</span>/<span class="keyword">run</span>/wpa_supplicant GROUP=netdev</span><br><span class="line">update_config=1</span><br><span class="line">network=&#123;</span><br><span class="line">        ssid=<span class="string">"xxx"</span></span><br><span class="line">        psk=<span class="string">"xxx"</span></span><br><span class="line">        proto=RSN</span><br><span class="line">        key_mgmt=WPA-PSK</span><br><span class="line">        pairwise=CCMP</span><br><span class="line">        auth_alg=<span class="keyword">OPEN</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>然后启动wifi:<br><code>sudo ifup wlan0</code><br>查看wifi连接信息:<br><code>ifconfig wlan0</code><br>内容如下:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wlan0     Link encap:Ethernet  HWaddr e8:<span class="number">4</span>e:<span class="number">06</span>:<span class="number">29</span>:<span class="number">0f</span>:<span class="number">3</span>b  </span><br><span class="line">          inet addr:<span class="number">192.168</span><span class="number">.1</span><span class="number">.199</span>  Bcast:<span class="number">192.168</span><span class="number">.1</span><span class="number">.255</span>  Mask:<span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line">          UP BROADCAST RUNNING MULTICAST  MTU:<span class="number">1500</span>  Metric:<span class="number">1</span></span><br><span class="line">          RX packets:<span class="number">2662</span> errors:<span class="number">0</span> dropped:<span class="number">1</span> overruns:<span class="number">0</span> frame:<span class="number">0</span></span><br><span class="line">          TX packets:<span class="number">30</span> errors:<span class="number">0</span> dropped:<span class="number">0</span> overruns:<span class="number">0</span> carrier:<span class="number">0</span></span><br><span class="line">          collisions:<span class="number">0</span> txqueuelen:<span class="number">1000</span></span><br><span class="line">          RX bytes:<span class="number">263097</span> (<span class="number">256.9</span> KiB)  TX bytes:<span class="number">3227</span> (<span class="number">3.1</span> KiB)</span><br></pre></td></tr></table></figure></p>
<p>至此网络部分正常.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>检查更新<br><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> install rpi-<span class="keyword">update</span></span><br><span class="line">sudo rpi-<span class="keyword">update</span></span><br></pre></td></tr></table></figure></p>
<p>默认的源在国外, 下载速度太慢, 所以需要修改默认源到国内, 试了好几个, 发现公司的网络访问阿里云的源速度不错<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo vi <span class="regexp">/etc/</span>apt/sources.list</span><br><span class="line">deb <span class="string">http:</span><span class="comment">//mirrors.aliyun.com/raspbian/raspbian/ wheezy main non-free contrib</span></span><br><span class="line">deb-src <span class="string">http:</span><span class="comment">//mirrors.aliyun.com/raspbian/raspbian/ wheezy main non-free contrib</span></span><br></pre></td></tr></table></figure></p>
<p>进行更新<br><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> <span class="keyword">update</span></span><br><span class="line">sudo apt-<span class="built_in">get</span> upgrade</span><br></pre></td></tr></table></figure></p>]]>
    
    </summary>
    
      <category term="RaspBerry" scheme="http://ferstar.github.io/tags/RaspBerry/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[实用shell脚本整理（不定期更新）]]></title>
    <link href="http://ferstar.github.io/2015/08/31/%E5%AE%9E%E7%94%A8shell%E8%84%9A%E6%9C%AC%E6%95%B4%E7%90%86%EF%BC%88%E4%B8%8D%E5%AE%9A%E6%9C%9F%E6%9B%B4%E6%96%B0%EF%BC%89/"/>
    <id>http://ferstar.github.io/2015/08/31/实用shell脚本整理（不定期更新）/</id>
    <published>2015-08-31T15:13:39.000Z</published>
    <updated>2015-08-31T15:14:09.000Z</updated>
    <content type="html"><![CDATA[<h2 id="1-_转换时间和unix时间戳">1. 转换时间和unix时间戳</h2><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 时间转时间戳</span></span><br><span class="line"><span class="type">date</span> -d <span class="string">"2015-07-24 12:25:00"</span> +%s</span><br><span class="line"><span class="comment"># 时间戳转时间</span></span><br><span class="line"><span class="type">date</span> -d <span class="string">"@1437711900"</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="2-_分析nginx日志">2. 分析nginx日志</h2><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#查看访问地址次数排行</span><br><span class="line">awk -F\" '&#123;<span class="keyword">print</span> <span class="label">$2&#125;</span>' blog_access.<span class="keyword">log</span> | awk '&#123;<span class="keyword">print</span> <span class="label">$2&#125;</span>' | <span class="keyword">sort</span> | uniq -c | <span class="keyword">sort</span> -rn</span><br></pre></td></tr></table></figure>
<h2 id="3-_输出当前目录下各个子目录所使用的空间">3. 输出当前目录下各个子目录所使用的空间</h2><figure class="highlight rsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">du -h --<span class="built_in">max</span>-<span class="built_in">depth</span>=<span class="number">1</span></span><br></pre></td></tr></table></figure>
<h2 id="4-_查找文件内容">4. 查找文件内容</h2><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grep</span> <span class="string">"search"</span> filename</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从文件内容查找与正则表达式匹配的行：</span></span><br><span class="line"><span class="keyword">grep</span> –e “/pattern/” filename</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找时不区分大小写：</span></span><br><span class="line"><span class="keyword">grep</span> –i <span class="string">"search"</span> filename</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找匹配的行数：</span></span><br><span class="line"><span class="keyword">grep</span> -c <span class="string">"search"</span> filename</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从文件内容查找不匹配指定字符串的行：</span></span><br><span class="line"><span class="keyword">grep</span> –v <span class="string">"search"</span> filename</span><br><span class="line"></span><br><span class="line"><span class="comment"># 结合find</span></span><br><span class="line">find . -name <span class="string">"*.php"</span> | xargs <span class="keyword">grep</span> <span class="string">"function"</span></span><br></pre></td></tr></table></figure>
<h2 id="5-_查看dd命令的进度">5. 查看dd命令的进度</h2><p><code>dd if=/dev/zero of=/tmp/zero.img bs=10M count=100000</code><br>想要查看上面的dd命令的执行进度，可以使用下面几种方法：</p>
<p>比如：每5秒输出dd的进度<br><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">方法一：</span><br><span class="line">watch -n <span class="number">5</span> pkill -USR1 ^dd$</span><br><span class="line">方法二：</span><br><span class="line">watch -n <span class="number">5</span> killall -USR1 dd</span><br><span class="line">方法三：</span><br><span class="line"><span class="keyword">while</span> killall -USR1 dd; <span class="keyword">do</span> <span class="keyword">sleep</span> <span class="number">5</span>; done</span><br><span class="line">方法四：</span><br><span class="line"><span class="keyword">while</span> (ps auxww |<span class="keyword">grep</span> <span class="string">" dd "</span> |<span class="keyword">grep</span> -v <span class="keyword">grep</span> |awk <span class="string">'&#123;print $2&#125;'</span> |<span class="keyword">while</span> <span class="keyword">read</span> pid; <span class="keyword">do</span> <span class="keyword">kill</span> -USR1 <span class="variable">$pid</span>; done) ; <span class="keyword">do</span> <span class="keyword">sleep</span> <span class="number">5</span>; done</span><br><span class="line">上述四种方法中使用三个命令：pkill、killall、<span class="keyword">kill</span>向dd命令发送SIGUSR1信息，dd命令进程接收到信号之后就打印出自己当前的进度。</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="1-_转换时间和unix时间戳">1. 转换时间和unix时间戳</h2><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 时间转时间戳</span></span><br><span class="line"><span class="type">date</span> -d <span class="string">"2015-07-24 12:25:00"</span> +%s</span><br><span class="line"><span class="comment"># 时间戳转时间</span></span><br><span class="line"><span class="type">date</span> -d <span class="string">"@1437711900"</span></span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="shell" scheme="http://ferstar.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[修改某寨厂U转串(cp2102模块)SN过程记录]]></title>
    <link href="http://ferstar.github.io/2015/08/31/%E4%BF%AE%E6%94%B9%E6%9F%90%E5%AF%A8%E5%8E%82U%E8%BD%AC%E4%B8%B2-cp2102%E6%A8%A1%E5%9D%97-SN%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/"/>
    <id>http://ferstar.github.io/2015/08/31/修改某寨厂U转串-cp2102模块-SN过程记录/</id>
    <published>2015-08-31T15:10:59.000Z</published>
    <updated>2015-08-31T15:11:58.000Z</updated>
    <content type="html"><![CDATA[<h2 id="背景">背景</h2><p>项目需求，要在机器上挂几个传感器，所以买了几个U转串的模块做连接，买到傻眼了，寨厂的模块所有硬件信息甚至包括SN居然都是一模一样，这就出现一个问题，一台设备上只能插一个模块，多了没法识别，因为硬件信息全部一样，看<a href="http://blog.163.com/lby147612@126/blog/static/170410452201382510318725" target="_blank" rel="external">这位仁兄教程</a>说这个模块可以改ID，顿时大爽，于是兴冲冲的去找工具，找驱动，下载安装，以为真的so easy，还是想的太天真，下下来的所有工具只能看不能改，要么就是改了报错，于是继续google，原因大概是Silicon Labs公司刚开始的时候硬件还有驱动没有做限制，导致后来寨货横行，然后痛定思痛新驱动程序中屏蔽了修改设备ID的接口云云，好吧，也就是说新驱动不能用喽，开始找旧驱动，从15年找到04年，终于被我找到了！然后发现，那时候的驱动是不带数字签名的，也就是说04年的驱动无法在winxp以后的系统上面用，win7倒是勉强可以，不过需要开开发者模式什么的，醉了，只得默默的掏出吃灰N久的上网本，继续折腾，终于成功修改：</p>
<a id="more"></a>
<h2 id="过程">过程</h2><p>其实跟上面那位仁兄的教程一样，只是他帖子里只提了做法，并没有提供相关驱动链接，我这里附上千辛万苦找到的驱动还有修改工具：<br><a href="http://7xivdp.com1.z0.glb.clouddn.com/2015/08/454542992.zip" target="_blank" rel="external">这个是驱动：CP210X驱动程序-xp专用.zip</a><br><a href="http://7xivdp.com1.z0.glb.clouddn.com/2015/08/343120409.zip" target="_blank" rel="external">这个是工具：CP210x_5x_AppNote_Archive.zip</a></p>
<p>打开<code>CP210xSetIDs.exe</code>，如图：<br><img src="http://7xivdp.com1.z0.glb.clouddn.com/2015/08/3855334421.jpg" alt="修改serialnumber.JPG"></p>
<p>一般修改里面的<code>serialnumber</code>即可满足需求, 改完后点击<code>program devices</code>即可,改完后硬件信息如下, 可以发现<code>sn</code>已经成功修改</p>
<p><img src="http://7xivdp.com1.z0.glb.clouddn.com/2015/08/4259131112.png" alt="2015-08-08 17_36_03屏幕截图.png"></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="背景">背景</h2><p>项目需求，要在机器上挂几个传感器，所以买了几个U转串的模块做连接，买到傻眼了，寨厂的模块所有硬件信息甚至包括SN居然都是一模一样，这就出现一个问题，一台设备上只能插一个模块，多了没法识别，因为硬件信息全部一样，看<a href="http://blog.163.com/lby147612@126/blog/static/170410452201382510318725">这位仁兄教程</a>说这个模块可以改ID，顿时大爽，于是兴冲冲的去找工具，找驱动，下载安装，以为真的so easy，还是想的太天真，下下来的所有工具只能看不能改，要么就是改了报错，于是继续google，原因大概是Silicon Labs公司刚开始的时候硬件还有驱动没有做限制，导致后来寨货横行，然后痛定思痛新驱动程序中屏蔽了修改设备ID的接口云云，好吧，也就是说新驱动不能用喽，开始找旧驱动，从15年找到04年，终于被我找到了！然后发现，那时候的驱动是不带数字签名的，也就是说04年的驱动无法在winxp以后的系统上面用，win7倒是勉强可以，不过需要开开发者模式什么的，醉了，只得默默的掏出吃灰N久的上网本，继续折腾，终于成功修改：</p>]]>
    
    </summary>
    
      <category term="Silicon" scheme="http://ferstar.github.io/tags/Silicon/"/>
    
      <category term="cp2102" scheme="http://ferstar.github.io/tags/cp2102/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[C#中修改&保存Properties.Settings里的值]]></title>
    <link href="http://ferstar.github.io/2015/08/31/C-%E4%B8%AD%E4%BF%AE%E6%94%B9-%E4%BF%9D%E5%AD%98Properties-Settings%E9%87%8C%E7%9A%84%E5%80%BC/"/>
    <id>http://ferstar.github.io/2015/08/31/C-中修改-保存Properties-Settings里的值/</id>
    <published>2015-08-31T15:07:56.000Z</published>
    <updated>2015-08-31T15:08:57.000Z</updated>
    <content type="html"><![CDATA[<p>打算在<code>Properties.Settings</code>中存一个不太短也不太长的string, 一直存不了, 程序退出, 就回到默认值, 着实蛋疼, google之发现算是一个低级错误, 其实就漏了一句: <code>Properties.Settings.Default.Save();</code> set完毕后save()一下就ok了</p>
<a id="more"></a>
<p>存完后忽然想到这个string长度该不会有啥限制, 别溢出就糗大了, 于是查了下, 哦, 有个蛋疼的外国友人还真的自己测试了下,<a href="http://stackoverflow.com/questions/20457089/is-there-a-maximum-size-for-application-settings" target="_blank" rel="external">跳转查看</a> 发现能存很长很长(32767个字符)</p>
<p>然后我默默算了下我这个小程序的list容量, 一个item大概150长, 也就是说可以存200多条数据, 呵呵, 足够了~</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>打算在<code>Properties.Settings</code>中存一个不太短也不太长的string, 一直存不了, 程序退出, 就回到默认值, 着实蛋疼, google之发现算是一个低级错误, 其实就漏了一句: <code>Properties.Settings.Default.Save();</code> set完毕后save()一下就ok了</p>]]>
    
    </summary>
    
      <category term="C#" scheme="http://ferstar.github.io/tags/C/"/>
    
      <category term="WPF" scheme="http://ferstar.github.io/tags/WPF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[挂代理&apt-fast多线程更新packages]]></title>
    <link href="http://ferstar.github.io/2015/08/31/%E6%8C%82%E4%BB%A3%E7%90%86-apt-fast%E5%A4%9A%E7%BA%BF%E7%A8%8B%E6%9B%B4%E6%96%B0packages/"/>
    <id>http://ferstar.github.io/2015/08/31/挂代理-apt-fast多线程更新packages/</id>
    <published>2015-08-31T15:06:06.000Z</published>
    <updated>2015-08-31T15:06:58.000Z</updated>
    <content type="html"><![CDATA[<p>因为更新并不是频繁操作，所以只需要临时在终端指定下proxy<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo -i</span><br><span class="line"><span class="preprocessor"># 这里当然需要你提前在内网<span class="number">90</span>的机器上配好http fuck gfw代理喽</span></span><br><span class="line"><span class="keyword">export</span> http_proxy=http:<span class="comment">//192.168.1.90:8118/</span></span><br></pre></td></tr></table></figure></p>
<p>这样就在当前终端临时给root用户指定了内网代理</p>
<p>apt-get工具默认是单线程的，还是太慢，可以用另外的一个工具代替<code>apt-fast</code><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get <span class="operator"><span class="keyword">install</span> axel</span><br><span class="line">axel -o /usr/<span class="keyword">bin</span>/apt-<span class="keyword">fast</span> <span class="keyword">http</span>://www.mattparnell.com/linux/apt-<span class="keyword">fast</span>/apt-<span class="keyword">fast</span>.sh</span><br><span class="line">chmod +x /usr/<span class="keyword">bin</span>/apt-<span class="keyword">fast</span></span></span><br></pre></td></tr></table></figure></p>
<p>方法很简单，直接apt-fast替换apt-get即可</p>
<p>经过上述折腾，在比较生僻的国外源拖packages的速度会大有改善(十倍以上的提升)～</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>因为更新并不是频繁操作，所以只需要临时在终端指定下proxy<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span c]]>
    </summary>
    
      <category term="Ubuntu" scheme="http://ferstar.github.io/tags/Ubuntu/"/>
    
      <category term="代理" scheme="http://ferstar.github.io/tags/%E4%BB%A3%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[源//ROS on RaspBerry Pi2]]></title>
    <link href="http://ferstar.github.io/2015/08/31/%E6%BA%90-ROS-on-RaspBerry-Pi2/"/>
    <id>http://ferstar.github.io/2015/08/31/源-ROS-on-RaspBerry-Pi2/</id>
    <published>2015-08-31T14:51:20.000Z</published>
    <updated>2015-09-02T01:33:39.000Z</updated>
    <content type="html"><![CDATA[<p>首先按照下面的连接在树莓派上安装ubuntu<br><a href="https://wiki.ubuntu.com/ARM/RaspberryPi" target="_blank" rel="external">1. Raspberry Pi 2 (with Ubuntu 14.04.2 2015-04-06)</a><br><a href="http://wiki.ros.org/indigo/Installation/UbuntuARM" target="_blank" rel="external">2. Ubuntu ARM install of ROS Indigo</a></p>
<blockquote>
<p>需要注意的是链接里提供的镜像是基本的系统，展开只有2G不到，而拿来做开发的话，tf卡至少都在8G以上，剩下没有使用的空间可以在PC系统安装gparted，把写好的卡第二分区resize一下就可以了。</p>
</blockquote>
<p>因为是port源，所以mirror站点几乎没有，找到个比主站稍快点的一个</p>
<p>注意：<code>libraspberrypi-dev</code>这个包不要安装，装了会影响到后续ros环境的编译，万一手欠装了，出错的时候<code>apt-get</code>是没法卸载的，那时候用<code>dpkg --remove libraspberrypi-dev</code>卸载，当然root权限是必须的</p>
<a id="more"></a>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#备份是个好习惯</span><br><span class="line">sudo -<span class="tag">i</span></span><br><span class="line">cp /etc/apt/sources<span class="class">.list</span> /etc/apt/sources<span class="class">.list</span><span class="class">.bak</span></span><br><span class="line">vi /etc/apt/sources.list</span><br></pre></td></tr></table></figure>
<p>如下内容：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"># See http://<span class="operator"><span class="keyword">help</span>.ubuntu.com/community/UpgradeNotes <span class="keyword">for</span> how <span class="keyword">to</span> <span class="keyword">upgrade</span> <span class="keyword">to</span></span><br><span class="line"># newer <span class="keyword">versions</span> <span class="keyword">of</span> the distribution.</span><br><span class="line"></span><br><span class="line">deb <span class="keyword">http</span>://<span class="keyword">ftp</span>.tu-chemnitz.de/pub/linux/ubuntu-ports/ trusty <span class="keyword">main</span> <span class="keyword">restricted</span></span><br><span class="line">deb-src <span class="keyword">http</span>://<span class="keyword">ftp</span>.tu-chemnitz.de/pub/linux/ubuntu-ports/ trusty <span class="keyword">main</span> <span class="keyword">restricted</span></span><br><span class="line"></span><br><span class="line">## Major bug fix updates produced <span class="keyword">after</span> the <span class="keyword">final</span> <span class="keyword">release</span> <span class="keyword">of</span> the</span><br><span class="line">## distribution.</span><br><span class="line">deb <span class="keyword">http</span>://<span class="keyword">ftp</span>.tu-chemnitz.de/pub/linux/ubuntu-ports/ trusty-updates <span class="keyword">main</span> <span class="keyword">restricted</span></span><br><span class="line">deb-src <span class="keyword">http</span>://<span class="keyword">ftp</span>.tu-chemnitz.de/pub/linux/ubuntu-ports/ trusty-updates <span class="keyword">main</span> <span class="keyword">restricted</span></span><br><span class="line"></span><br><span class="line">## Uncomment the <span class="keyword">following</span> two <span class="keyword">lines</span> <span class="keyword">to</span> <span class="keyword">add</span> software <span class="keyword">from</span> the <span class="string">'universe'</span></span><br><span class="line">## repository.</span><br><span class="line">## <span class="keyword">N</span>.B. software <span class="keyword">from</span> this repository <span class="keyword">is</span> ENTIRELY UNSUPPORTED <span class="keyword">by</span> the Ubuntu</span><br><span class="line">## team. Also, please note that software <span class="keyword">in</span> universe WILL <span class="keyword">NOT</span> receive <span class="keyword">any</span></span><br><span class="line">## review <span class="keyword">or</span> updates <span class="keyword">from</span> the Ubuntu <span class="keyword">security</span> team.</span><br><span class="line">deb <span class="keyword">http</span>://<span class="keyword">ftp</span>.tu-chemnitz.de/pub/linux/ubuntu-ports/ trusty universe multiverse</span><br><span class="line">deb-src <span class="keyword">http</span>://<span class="keyword">ftp</span>.tu-chemnitz.de/pub/linux/ubuntu-ports/ trusty universe multiverse</span><br><span class="line">deb <span class="keyword">http</span>://<span class="keyword">ftp</span>.tu-chemnitz.de/pub/linux/ubuntu-ports/ trusty-updates universe multiverse</span><br><span class="line">deb-src <span class="keyword">http</span>://<span class="keyword">ftp</span>.tu-chemnitz.de/pub/linux/ubuntu-ports/ trusty-updates universe multiverse</span><br><span class="line"></span><br><span class="line">## <span class="keyword">N</span>.B. software <span class="keyword">from</span> this repository may <span class="keyword">not</span> have been tested <span class="keyword">as</span></span><br><span class="line">## extensively <span class="keyword">as</span> that contained <span class="keyword">in</span> the <span class="keyword">main</span> <span class="keyword">release</span>, although it includes</span><br><span class="line">## newer <span class="keyword">versions</span> <span class="keyword">of</span> <span class="keyword">some</span> applications which may provide useful features.</span><br><span class="line">## Also, please note that software <span class="keyword">in</span> backports WILL <span class="keyword">NOT</span> receive <span class="keyword">any</span> review</span><br><span class="line">## <span class="keyword">or</span> updates <span class="keyword">from</span> the Ubuntu <span class="keyword">security</span> team.</span><br><span class="line">deb <span class="keyword">http</span>://<span class="keyword">ftp</span>.tu-chemnitz.de/pub/linux/ubuntu-ports/ trusty-backports <span class="keyword">main</span> <span class="keyword">restricted</span></span><br><span class="line">deb-src <span class="keyword">http</span>://<span class="keyword">ftp</span>.tu-chemnitz.de/pub/linux/ubuntu-ports/ trusty-backports <span class="keyword">main</span> <span class="keyword">restricted</span></span><br><span class="line"></span><br><span class="line">deb <span class="keyword">http</span>://<span class="keyword">ftp</span>.tu-chemnitz.de/pub/linux/ubuntu-ports/ trusty-<span class="keyword">security</span> <span class="keyword">main</span> <span class="keyword">restricted</span></span><br><span class="line">deb-src <span class="keyword">http</span>://<span class="keyword">ftp</span>.tu-chemnitz.de/pub/linux/ubuntu-ports/ trusty-<span class="keyword">security</span> <span class="keyword">main</span> <span class="keyword">restricted</span></span><br><span class="line">deb <span class="keyword">http</span>://<span class="keyword">ftp</span>.tu-chemnitz.de/pub/linux/ubuntu-ports/ trusty-<span class="keyword">security</span> universe</span><br><span class="line">deb-src <span class="keyword">http</span>://<span class="keyword">ftp</span>.tu-chemnitz.de/pub/linux/ubuntu-ports/ trusty-<span class="keyword">security</span> universe</span><br><span class="line">deb <span class="keyword">http</span>://<span class="keyword">ftp</span>.tu-chemnitz.de/pub/linux/ubuntu-ports/ trusty-<span class="keyword">security</span> multiverse</span><br><span class="line">deb-src <span class="keyword">http</span>://<span class="keyword">ftp</span>.tu-chemnitz.de/pub/linux/ubuntu-ports/ trusty-<span class="keyword">security</span> multiverse</span></span><br></pre></td></tr></table></figure></p>
<h1 id="附加：">附加：</h1><p>新发现湾湾的两个源里有port源可以用，速度不错<br><a href="http://free.nchc.org.tw/ubuntu-ports/" target="_blank" rel="external">http://free.nchc.org.tw/ubuntu-ports/</a><br><a href="http://ftp.ubuntu-tw.org/mirror/ubuntu-ports/dists/" target="_blank" rel="external">http://ftp.ubuntu-tw.org/mirror/ubuntu-ports/dists/</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>首先按照下面的连接在树莓派上安装ubuntu<br><a href="https://wiki.ubuntu.com/ARM/RaspberryPi">1. Raspberry Pi 2 (with Ubuntu 14.04.2 2015-04-06)</a><br><a href="http://wiki.ros.org/indigo/Installation/UbuntuARM">2. Ubuntu ARM install of ROS Indigo</a></p>
<blockquote>
<p>需要注意的是链接里提供的镜像是基本的系统，展开只有2G不到，而拿来做开发的话，tf卡至少都在8G以上，剩下没有使用的空间可以在PC系统安装gparted，把写好的卡第二分区resize一下就可以了。</p>
</blockquote>
<p>因为是port源，所以mirror站点几乎没有，找到个比主站稍快点的一个</p>
<p>注意：<code>libraspberrypi-dev</code>这个包不要安装，装了会影响到后续ros环境的编译，万一手欠装了，出错的时候<code>apt-get</code>是没法卸载的，那时候用<code>dpkg --remove libraspberrypi-dev</code>卸载，当然root权限是必须的</p>]]>
    
    </summary>
    
      <category term="ROS" scheme="http://ferstar.github.io/tags/ROS/"/>
    
      <category term="RaspBerry" scheme="http://ferstar.github.io/tags/RaspBerry/"/>
    
      <category term="Ubuntu" scheme="http://ferstar.github.io/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Static IP Setup On Arch Linux ARM]]></title>
    <link href="http://ferstar.github.io/2015/08/20/Static-IP-Setup-On-Arch-Linux-ARM/"/>
    <id>http://ferstar.github.io/2015/08/20/Static-IP-Setup-On-Arch-Linux-ARM/</id>
    <published>2015-08-20T07:52:00.000Z</published>
    <updated>2015-08-31T14:44:46.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://archlinuxarm.org/forum/viewtopic.php?f=58&amp;t=8045" target="_blank" rel="external">http://archlinuxarm.org/forum/viewtopic.php?f=58&amp;t=8045</a></p>
<p>Try this, in a chroot (assumes you are root. you can always add sudo to the beginning of each command if you prefer sudo). Note in the below it is eth0.network not eth0-network as stated in your post. Systemd-networkd uses *.network files.</p>
<a id="more"></a>
<pre><code>nano /etc/systemd/network/eth0.network
`<span class="variable">&lt;/pre&gt;</span>

Then paste this <span class="keyword">in</span>:

<span class="variable">&lt;pre&gt;</span>`[Match]
Name=eth0

[Network]
Address=<span class="number">192.168</span>.<span class="number">1.8</span>/<span class="number">24</span>
Gateway=<span class="number">192.168</span>.<span class="number">1.1</span>
DNS=<span class="number">8.8</span>.<span class="number">8.8</span>
DNS=<span class="number">8.8</span>.<span class="number">4.4</span>
`<span class="variable">&lt;/pre&gt;</span>

You will then need <span class="keyword">to</span> disable netcl. To find <span class="keyword">out</span> what is enabled that is netctl related, run this:

<span class="variable">&lt;pre&gt;</span>`systemctl list-unit-files
`<span class="variable">&lt;/pre&gt;</span>

Once you identify <span class="literal">all</span> netctl related stuff. Go through and disable <span class="literal">all</span> netctl related stuff. You may have more <span class="keyword">to</span> disable than just the below:

<span class="variable">&lt;pre&gt;</span>`systemctl disable netctl@eth0.service
`<span class="variable">&lt;/pre&gt;</span>

You will then need systemd-networkd enabled:

<span class="variable">&lt;pre&gt;</span>`systemctl enable systemd-networkd
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://archlinuxarm.org/forum/viewtopic.php?f=58&amp;t=8045">http://archlinuxarm.org/forum/viewtopic.php?f=58&amp;t=8045</a></p>
<p>Try this, in a chroot (assumes you are root. you can always add sudo to the beginning of each command if you prefer sudo). Note in the below it is eth0.network not eth0-network as stated in your post. Systemd-networkd uses *.network files.</p>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[查询局域网在线ip及对应mac地址的方法]]></title>
    <link href="http://ferstar.github.io/2015/08/19/%E6%9F%A5%E8%AF%A2%E5%B1%80%E5%9F%9F%E7%BD%91%E5%9C%A8%E7%BA%BFip%E5%8F%8A%E5%AF%B9%E5%BA%94mac%E5%9C%B0%E5%9D%80%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>http://ferstar.github.io/2015/08/19/查询局域网在线ip及对应mac地址的方法/</id>
    <published>2015-08-19T13:25:43.000Z</published>
    <updated>2015-08-31T14:44:46.000Z</updated>
    <content type="html"><![CDATA[<p>win：<a href="http://7xivdp.com1.z0.glb.clouddn.com/2015/08/1360260925.rar" target="_blank" rel="external">maxcanner.rar</a></p>
<p>linux：arp-scan</p>
<p><code>arp-scan --interface=eth0 192.168.1.0/24</code></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>win：<a href="http://7xivdp.com1.z0.glb.clouddn.com/2015/08/1360260925.rar" target="_blank" rel="external">maxcanner.rar</a></p>
<p>linux：]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[树莓派2B+7寸触摸屏折腾记录]]></title>
    <link href="http://ferstar.github.io/2015/08/15/%E6%A0%91%E8%8E%93%E6%B4%BE2B-7%E5%AF%B8%E8%A7%A6%E6%91%B8%E5%B1%8F%E6%8A%98%E8%85%BE%E8%AE%B0%E5%BD%95/"/>
    <id>http://ferstar.github.io/2015/08/15/树莓派2B-7寸触摸屏折腾记录/</id>
    <published>2015-08-15T14:45:00.000Z</published>
    <updated>2015-08-31T14:44:46.000Z</updated>
    <content type="html"><![CDATA[<h1 id="硬件">硬件</h1><ol>
<li>raspberry pi2B+8G tf卡，系统lubuntu14.04.3</li>
<li><p>某宝7寸800x480电容式触摸屏，厂商信息如下：</p>
<p><code>0eef:0005 D-WAV Scientific Co., Ltd</code></p>
</li>
</ol>
<h1 id="过程">过程</h1><h2 id="1-_触屏驱动+显示分辨率适配">1. 触屏驱动+显示分辨率适配</h2><a id="more"></a>
<p>商家提供了预编译的内核，内容如下：</p>
<pre><code>├── config.txt
├── kernel7.img
├── kernel.img
├── modules
│   └── <span class="number">3.18</span><span class="number">.6</span>-v7+
├── USB_TOUCH_CAP_7<span class="number">.0</span>_RASPBIAN
└── xinput-calibrator_0<span class="number">.7</span><span class="number">.5</span>-<span class="number">1</span>_armhf.deb
`<span class="javascript">&lt;<span class="regexp">/pre&gt;

其中</span></span>`USB_TOUCH_CAP_7<span class="number">.0</span>_RASPBIAN`<span class="javascript"><span class="regexp">是自动安装脚本，但其实路径指定完全是错的，我修改如下：

&lt;pre&gt;</span></span>`<span class="comment">#!/bin/sh -e</span>
<span class="comment">#</span>
<span class="comment"># modified by ferstar</span>
<span class="comment">#</span>
<span class="comment"># This script is executed at the end of each multiuser runlevel.</span>
<span class="comment"># Make sure that the script will &amp;quot;exit 0&amp;quot; on success or any other</span>
<span class="comment"># value on error.</span>
<span class="comment">#</span>
sudo mv /boot/firmware/kernel7.img /boot/firmware/kernel7.img.`<span class="javascript"><span class="regexp">uname -r</span></span>`
sudo cp kernel7.img /boot/firmware/kernel7.img

sudo mv /boot/firmware/initrd7.img /boot/firmware/initrd7.img.`<span class="javascript"><span class="regexp">uname -r</span></span>`
sudo cp kernel.img /boot/firmware/initrd7.img

sudo cp /boot/firmware/config.txt /boot/firmware/config.txt.`<span class="javascript"><span class="regexp">uname -r</span></span>`
<span class="comment"># 这个是树莓派启动配置文件，里面一个参数比较重要max_usb_current=1，解除USB最大供电电流限制</span>
sudo cp config.txt /boot/firmware/config.txt

sudo mv <span class="regexp">/lib/modules/</span>`<span class="javascript"><span class="regexp">uname -r</span></span>` <span class="regexp">/lib/modules/</span>`<span class="javascript"><span class="regexp">uname -r</span></span>`.bak
sudo cp -r  .<span class="regexp">/modules /lib/</span>
<span class="comment"># 下面的这一步其实没必要，触屏校准xinput-calibrator软件在软件源里有提供，貌似还比这个版本新，不过用法都是一样的</span>
sudo dpkg -i xinput-calibrator_0<span class="number">.7</span><span class="number">.5</span>-<span class="number">1</span>_armhf.deb
reboot
`<span class="javascript"><span class="regexp">&lt;/</span>pre&gt;

重启后内核版本为</span>`<span class="number">3.18</span><span class="number">.6</span>-v7+`<span class="javascript">，以后不能从源里更新官方内核，会花屏，商家并没有提供触屏驱动源码

## <span class="number">2</span>\. 触屏校准

在设备开终端，运行</span>`xinput-calibrator`<span class="javascript">，按提示戳四下，然后把类似如下输出字段

&lt;pre&gt;</span>`Section &amp;quot;InputClass&amp;quot;
        Identifier      &amp;quot;calibration&amp;quot;
        MatchProduct    &amp;quot;RPI_TOUCH By ZH851&amp;quot;
        Option  &amp;quot;Calibration&amp;quot;   &amp;quot;<span class="number">3</span> <span class="number">790</span> <span class="number">9</span> <span class="number">490</span>&amp;quot;
        Option  &amp;quot;SwapAxes&amp;quot;      &amp;quot;<span class="number">0</span>&amp;quot;
EndSection
`<span class="javascript">&lt;<span class="regexp">/pre&gt;

写入到</span></span>`/usr/share/X11/xorg.conf.d/<span class="number">99</span>-calibration.conf`<span class="javascript"><span class="regexp">中，没有就新建之

## 3\. 触屏模拟右键

编辑</span></span>`/usr/share/X11/xorg.conf.d/<span class="number">99</span>-calibration.conf`<span class="javascript"><span class="regexp">，加入三行：

&lt;pre&gt;</span></span>`Option &amp;quot;EmulateThirdButton&amp;quot; &amp;quot;<span class="number">1</span>&amp;quot;
Option &amp;quot;EmulateThirdButtonTimeout&amp;quot; &amp;quot;<span class="number">750</span>&amp;quot;
Option &amp;quot;EmulateThirdButtonThreshold&amp;quot; &amp;quot;<span class="number">30</span>&amp;quot;
`<span class="javascript"><span class="regexp">&lt;/</span>pre&gt;

最终结果像这样：

&lt;pre&gt;</span>`Section &amp;quot;InputClass&amp;quot;
        Identifier      &amp;quot;calibration&amp;quot;
        MatchProduct    &amp;quot;RPI_TOUCH By ZH851&amp;quot;
        Option  &amp;quot;Calibration&amp;quot;   &amp;quot;<span class="number">3</span> <span class="number">790</span> <span class="number">9</span> <span class="number">490</span>&amp;quot;
        Option  &amp;quot;SwapAxes&amp;quot;      &amp;quot;<span class="number">0</span>&amp;quot;
        Option &amp;quot;EmulateThirdButton&amp;quot; &amp;quot;<span class="number">1</span>&amp;quot;
        Option &amp;quot;EmulateThirdButtonTimeout&amp;quot; &amp;quot;<span class="number">750</span>&amp;quot;
        Option &amp;quot;EmulateThirdButtonThreshold&amp;quot; &amp;quot;<span class="number">30</span>&amp;quot;
EndSection
`<span class="javascript">&lt;<span class="regexp">/pre&gt;

保存重启后，长按屏幕==鼠标右键效果，模拟右键完成

## 4\. 禁用系统bug报告弹窗

bug报告本来是好事，但无奈弹的太多了些，多数情况除了影响心情外，并没有什么卵用，所以需要禁用之：

</span></span>`sudo vi /etc/default/apport`<span class="javascript"><span class="regexp">

&lt;pre&gt;</span></span>`<span class="comment"># set this to 0 to disable apport, or to 1 to enable it</span>
<span class="comment"># you can temporarily override this with</span>
<span class="comment"># sudo service apport start force_start=1</span>
enabled=<span class="number">0</span>
`<span class="javascript"><span class="regexp">&lt;/</span>pre&gt;

## <span class="number">5</span>\. 虚拟键盘</span>`matchbox-keyboard`<span class="javascript">

起先照这里的说明[http:<span class="comment">//ozzmaker.com/2014/06/30/virtual-keyboard-for-the-raspberry-pi/](http://ozzmaker.com/2014/06/30/virtual-keyboard-for-the-raspberry-pi/)编译了下，发现键盘布局蛮丑的，后来手欠apt-get，发现原来有编译好的=。=，而且还长的略好看。</span>

虚拟键盘装上后需要考虑按需弹出的问题，作者帖子里写的适用于自行编译的版本，deb包安装的不适用，需要略做修改：

</span>`sudo vi /usr/bin/toggle-matchbox-keyboard.sh`<span class="javascript">

&lt;pre&gt;</span>`<span class="comment">#!/bin/bash</span>
<span class="comment">#This script toggle the virtual keyboard</span>

PID=`<span class="javascript">pidof matchbox-keyboard</span>`
<span class="keyword">if</span> [ ! -e $PID ]; <span class="keyword">then</span>
  killall matchbox-keyboard
<span class="keyword">else</span>
 matchbox-keyboard extended &amp;amp;
fi
`<span class="javascript">&lt;<span class="regexp">/pre&gt;

</span></span>`sudo chmod +x /usr/bin/toggle-matchbox-keyboard.sh`<span class="javascript"><span class="regexp">

</span></span>`sudo vi /usr/share/applications/inputmethods/matchbox-keyboard.desktop`<span class="javascript"><span class="regexp">

&lt;pre&gt;</span></span>`[Desktop Entry]
Name=Keyboard
Comment=Virtual Keyboard
<span class="comment"># Exec=matchbox-keyboard 原本是这行，需要指向我们自己的脚本</span>
Exec=toggle-matchbox-keyboard.sh
Type=Application
Icon=matchbox-keyboard.png
Categories=Panel;Utility;MB
X-MB-INPUT-MECHANSIM=True
`<span class="javascript"><span class="regexp">&lt;/</span>pre&gt;

</span>`vi .config/lxpanel/Lubuntu/panels/panel`<span class="javascript">这个路径也跟作者说的不太一致

&lt;pre&gt;</span>`Plugin {
    type = launchbar
    Config {
        Button {
            id=/usr/share/applications/inputmethods/matchbox-keyboard.desktop
        }
    }
}

Plugin {
    type = volumealsa
}
<span class="comment"># 我把键盘按钮放在音量键前，并把右下角的logout键去掉了，因为不小心触到会弹出很长的一个对话框，屏幕略小，显示不全</span>
`<span class="javascript">&lt;<span class="regexp">/pre&gt;

这样，注销后重登陆就会看到右下角键盘图标了，按下弹出，再按关闭，很方便～

## 6\. 配置自动登陆

默认每次登陆都是要输入密码，但又没法弹出虚拟键盘，所以自动登陆很需要

</span></span>`sudo vi /etc/lightdm/lightdm.conf`<span class="javascript"><span class="regexp">没有就新建，内容

&lt;pre&gt;</span></span>`[SeatDefaults]
<span class="comment"># 这里填写用于自动登录的用户名</span>
autologin-user=ubuntu
autologin-user-timeout=<span class="number">0</span>
<span class="comment"># Check https://bugs.launchpad.net/lightdm/+bug/854261 before setting a timeout</span>
user-session=Lubuntu
greeter-session=lightdm-gtk-greeter
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<h1 id="硬件">硬件</h1><ol>
<li>raspberry pi2B+8G tf卡，系统lubuntu14.04.3</li>
<li><p>某宝7寸800x480电容式触摸屏，厂商信息如下：</p>
<p><code>0eef:0005 D-WAV Scientific Co., Ltd</code></p>
</li>
</ol>
<h1 id="过程">过程</h1><h2 id="1-_触屏驱动+显示分辨率适配">1. 触屏驱动+显示分辨率适配</h2>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[搭载罗技C270，树莓派变身IP摄像头(mjpg-streamer)]]></title>
    <link href="http://ferstar.github.io/2015/08/15/%E6%90%AD%E8%BD%BD%E7%BD%97%E6%8A%80C270%EF%BC%8C%E6%A0%91%E8%8E%93%E6%B4%BE%E5%8F%98%E8%BA%ABIP%E6%91%84%E5%83%8F%E5%A4%B4-mjpg-streamer/"/>
    <id>http://ferstar.github.io/2015/08/15/搭载罗技C270，树莓派变身IP摄像头-mjpg-streamer/</id>
    <published>2015-08-15T14:00:21.000Z</published>
    <updated>2015-08-31T14:44:46.000Z</updated>
    <content type="html"><![CDATA[<p>最开始pi一代是搭配自带摄像头模块，采用这里的方案</p>
<p><a href="https://github.com/mpromonet/h264_v4l2_rtspserver" target="_blank" rel="external">h264_v4l2_rtspserver</a></p>
<p>最近pi二代推出，性能比一代强大了不少，可以装ubuntu跑ROS，顺路把玩了下罗技的C270摄像头</p>
<p>开始用<code>mjpg-streamer</code> <code>MJPEG</code>格式黑屏无显示，加了参数<code>-y</code>，也就是<code>YUV</code>格式，正常，但CPU占用超高，达90%，负载长期1.2不下，google大法一番后，代码杂交结果如下，<a href="https://github.com/ferstar/mjpg-streamer-diy/blob/master/README.md" target="_blank" rel="external">成功启用MJPEG格式</a>，延迟尚可，系统负载影响几乎没有，CPU平均1.3～效果拔群</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最开始pi一代是搭配自带摄像头模块，采用这里的方案</p>
<p><a href="https://github.com/mpromonet/h264_v4l2_rtspserver" target="_blank" rel="external">h264_v4l2_rts]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[8192cu网卡重编译]]></title>
    <link href="http://ferstar.github.io/2015/08/12/8192cu%E7%BD%91%E5%8D%A1%E9%87%8D%E7%BC%96%E8%AF%91/"/>
    <id>http://ferstar.github.io/2015/08/12/8192cu网卡重编译/</id>
    <published>2015-08-12T15:17:00.000Z</published>
    <updated>2015-08-31T14:44:46.000Z</updated>
    <content type="html"><![CDATA[<h1 id="详情步骤见">详情步骤见</h1><p><a href="https://github.com/ferstar/rtl8192cu-fixes/blob/raspberry/README.md" target="_blank" rel="external">8192CU driver for USB WiFi devices</a></p>
<h1 id="干掉ipv6：">干掉ipv6：</h1><pre><code>sudo vi /etc/sysctl<span class="class">.conf</span>
net<span class="class">.ipv6</span><span class="class">.conf</span><span class="class">.all</span><span class="class">.disable_ipv6</span> = <span class="number">1</span>
net<span class="class">.ipv6</span><span class="class">.conf</span><span class="class">.default</span><span class="class">.disable_ipv6</span> = <span class="number">1</span>
net<span class="class">.ipv6</span><span class="class">.conf</span><span class="class">.lo</span><span class="class">.disable_ipv6</span> = <span class="number">1</span> 
</code></pre><h1 id="wicd和networkmanager之间的切换">wicd和networkmanager之间的切换</h1><p><a href="http://petrkout.com/linux/kubuntu-replace-network-manager-with-wicd/" target="_blank" rel="external">http://petrkout.com/linux/kubuntu-replace-network-manager-with-wicd/</a></p>
<h1 id="addition">addition</h1><p>内核更换成触摸屏商家定制，没有对应的kernel-header，所以～这是不成的了。。。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="详情步骤见">详情步骤见</h1><p><a href="https://github.com/ferstar/rtl8192cu-fixes/blob/raspberry/README.md" target="_blank" rel="external">819]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[备份内存卡分区到img]]></title>
    <link href="http://ferstar.github.io/2015/08/12/%E5%A4%87%E4%BB%BD%E5%86%85%E5%AD%98%E5%8D%A1%E5%88%86%E5%8C%BA%E5%88%B0img/"/>
    <id>http://ferstar.github.io/2015/08/12/备份内存卡分区到img/</id>
    <published>2015-08-12T11:15:43.000Z</published>
    <updated>2015-08-31T14:44:46.000Z</updated>
    <content type="html"><![CDATA[<pre><code># 将sdb分区拷贝到硬盘
<span class="label">sudo</span> dd <span class="preprocessor">if</span>=/dev/sdb of<span class="label">=ros_ready</span>.img <span class="keyword">bs=4M
</span># <span class="keyword">bmaptool工具建立索引，提高下次写入内存卡速度，缩短写入时间
</span><span class="keyword">bmaptool </span>create ros_ready.img &amp;gt<span class="comment">; ros_ready.bmap</span>
# 压缩img，减小文件体积
<span class="label">tar</span> cvzf ros_ready.tar.gz ros_ready.img ros_ready.<span class="keyword">bmap
</span>`&lt;/pre&gt;

写入到内存卡

&lt;pre&gt;`sudo <span class="keyword">bmaptool </span>copy --<span class="keyword">bmap </span>ros_ready.<span class="keyword">bmap </span>ros_ready.img /dev/sdb
</code></pre><p>展开内存卡剩余未用空间</p>
<p><code>直接用gparted即可</code></p>
]]></content>
    <summary type="html">
    <![CDATA[<pre><code># 将sdb分区拷贝到硬盘
<span class="label">sudo</span> dd <span class="preprocessor">if</span>=/dev/sdb of<span class="label">=ros_ready</]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[[SOLVED] g++: internal compiler error: Killed (program cc1plus)]]></title>
    <link href="http://ferstar.github.io/2015/08/12/SOLVED-g-internal-compiler-error-Killed-program-cc1plus/"/>
    <id>http://ferstar.github.io/2015/08/12/SOLVED-g-internal-compiler-error-Killed-program-cc1plus/</id>
    <published>2015-08-12T06:41:00.000Z</published>
    <updated>2015-08-31T14:44:46.000Z</updated>
    <content type="html"><![CDATA[<p>兴高采烈编译<code>kobuki_bumper2pc_nodelet</code>中，突然蹦出这么个错，同时终端变的略卡，下意识的敲了下<code>free -h</code>，囧，原来是内存用尽了～</p>
<p>上swap拯救之</p>
<pre><code># 在~目录建一个1G的<span class="built_in">swap</span>文件，差不多应该够了
dd <span class="keyword">if</span>=/dev/zero of=~/<span class="built_in">swap</span>.img bs=1M <span class="built_in">count</span>=<span class="number">1000</span>
mkswap <span class="built_in">swap</span>.img
sudo swapon <span class="built_in">swap</span>.img
</code></pre><p>再敲<code>free -h</code>确认下是否开启，结果如图</p>
<p><img src="http://7xivdp.com1.z0.glb.clouddn.com/2015/08/1834023921.png" alt="2015-08-12 14:39:22屏幕截图.png"></p>
<p>已经用超一半swap，还好编译通过，好险～</p>
<p>阿西吧，编译<code>pano_py</code>时内存又爆掉，还得再加点swap</p>
<p>还是上面的方法，只需要新建一个<code>swap1.img</code>的swap file就可以</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>兴高采烈编译<code>kobuki_bumper2pc_nodelet</code>中，突然蹦出这么个错，同时终端变的略卡，下意识的敲了下<code>free -h</code>，囧，原来是内存用尽了～</p>
<p>上swap拯救之</p>
<pre><code># 在]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[E: Package 'ros-indigo-gazebo-ros' has no installation candidate]]></title>
    <link href="http://ferstar.github.io/2015/08/12/E-Package-ros-indigo-gazebo-ros-has-no-installation-candidate/"/>
    <id>http://ferstar.github.io/2015/08/12/E-Package-ros-indigo-gazebo-ros-has-no-installation-candidate/</id>
    <published>2015-08-12T02:58:00.000Z</published>
    <updated>2015-08-31T14:44:46.000Z</updated>
    <content type="html"><![CDATA[<p>x，又找不见这个包。。。</p>
<p>奶奶的，装之</p>
<p><code>sudo -H apt-get install -y ros-indigo-gazebo-ros</code></p>
<p>然后提示没有这个包，好吧，通配符匹配之</p>
<p><code>sudo -H apt-get install -y ros-indigo-gazebo-*</code></p>
<p>似乎也没搞定，挂起，等待后续解决</p>
<h2 id="暂时跳过，方法：">暂时跳过，方法：</h2><p><code>~/kobuki/src/kobuki_desktop$ mv kobuki_gazebo_plugins .kobuki_gazebo_plugins</code></p>
<p>即移开<code>kobuki_gazebo_plugins</code>这个包</p>
<h2 id="两种补全依赖包的做法">两种补全依赖包的做法</h2><ol>
<li><code>rosdep install --from-paths src -i -y</code></li>
<li><code>sudo -H apt-get install -y ros-indigo-***</code> 提示缺啥补上即可</li>
</ol>
<h2 id="与之相关连的一个包kobuki_qtestsuite也需要跳过，跳过后发现官方有deb包提供，所以尝试安装">与之相关连的一个包<code>kobuki_qtestsuite</code>也需要跳过，跳过后发现官方有deb包提供，所以尝试安装</h2><p><code>sudo apt-get install ros-indigo-kobuki-qtestsuite</code></p>
<p>于是又安装了一坨deb。。。不过还好这个包算是装上了</p>
<h2 id="编译到turtlebot的时候，上面提到的跳过大法似乎失灵，所以只能暴力删除">编译到<code>turtlebot</code>的时候，上面提到的跳过大法似乎失灵，所以只能暴力删除</h2><p><code>~/turtlebot/src/turtlebot_create_desktop$ rm -r create_gazebo_plugins</code></p>
<h2 id="总结">总结</h2><p>顺利编译完成，只有<code>kobuki_gazebo_plugins</code>和<code>create_gazebo_plugins</code>两个包没有编译，其余全部搞定！</p>
<h2 id="附加">附加</h2><p>修改catkin_ws/devel中</p>
<pre><code><span class="comment"># environment at generation time</span>
        CMAKE_PREFIX_PATH = <span class="string">'/home/ubuntu/catkin_ws/devel;/home/ubuntu/turtlebot/devel;/home/ubuntu/kobuki/devel;/home/ubuntu/rocon/devel;/opt/ros/indigo'</span>.<span class="built_in">split</span>(<span class="string">';'</span>)
</code></pre><p>环境变量</p>
<p>～/.bashrc中只需要添加</p>
<p><code>source ~/catkin_ws/devel/setup.bash</code></p>
<p>即可</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>x，又找不见这个包。。。</p>
<p>奶奶的，装之</p>
<p><code>sudo -H apt-get install -y ros-indigo-gazebo-ros</code></p>
<p>然后提示没有这个包，好吧，通配符匹配之</p>
<p><code>s]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[[SOLVED]Could not find a package configuration file provided by &quot;***&quot; with any   of the following names]]></title>
    <link href="http://ferstar.github.io/2015/08/12/SOLVED-Could-not-find-a-package-configuration-file-provided-by-quot-quot-with-any-of-the-following-names/"/>
    <id>http://ferstar.github.io/2015/08/12/SOLVED-Could-not-find-a-package-configuration-file-provided-by-quot-quot-with-any-of-the-following-names/</id>
    <published>2015-08-12T01:17:00.000Z</published>
    <updated>2015-08-31T14:44:46.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://wiki.ros.org/turtlebot/Tutorials/indigo/Turtlebot%20Installation" target="_blank" rel="external">进行到Workspaces</a></p>
<p>源码编译果然坑</p>
<p><code>rocon catkin_make</code>时报错如题，解决方法如下：</p>
<p><code>sudo apt-get install ros-indigo-***</code></p>
<p>其中<em>*</em>可以替换为任意报错的包名字即可</p>
<p>有些包可能提示的是下划线，比如<code>yocs_msgs</code>，对应的deb包名字应该是<code>ros-indigo-yocs-msgs</code></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://wiki.ros.org/turtlebot/Tutorials/indigo/Turtlebot%20Installation" target="_blank" rel="external">进行到Workspaces</a></p>
<p]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[[SOLVED] CMAKE ERROR: YOUR CXX COMPILER: “CMAKE_CXX_COMPILER-NOTFOUND” WAS NOT FOUND. PLEASE SET CMAKE_CXX_COMPILER TO A VALID COMPILER PATH OR NAME[SOLVED] CMAKE ERROR: YOUR CXX COMPILER: “CMAKE_CXX_]]></title>
    <link href="http://ferstar.github.io/2015/08/12/SOLVED-CMAKE-ERROR-YOUR-CXX-COMPILER-%E2%80%9CCMAKE-CXX-COMPILER-NOTFOUND%E2%80%9D-WAS-NOT-FOUND-PLEASE-SET-CMAKE-CXX-COMPILER-TO-A-VALID-COMPILER-PATH-OR-NAME-SOLVED-CMAKE-ERROR-YOUR-CXX-COMPILER-%E2%80%9CCMAKE-CXX/"/>
    <id>http://ferstar.github.io/2015/08/12/SOLVED-CMAKE-ERROR-YOUR-CXX-COMPILER-“CMAKE-CXX-COMPILER-NOTFOUND”-WAS-NOT-FOUND-PLEASE-SET-CMAKE-CXX-COMPILER-TO-A-VALID-COMPILER-PATH-OR-NAME-SOLVED-CMAKE-ERROR-YOUR-CXX-COMPILER-“CMAKE-CXX/</id>
    <published>2015-08-12T00:56:25.000Z</published>
    <updated>2015-08-31T14:44:46.000Z</updated>
    <content type="html"><![CDATA[<p>c++没有指定，so，装之</p>
<p><code>sudo apt-get install build-essential -y</code></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>c++没有指定，so，装之</p>
<p><code>sudo apt-get install build-essential -y</code></p>
]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[利用手头设备搞定ss翻墙~]]></title>
    <link href="http://ferstar.github.io/2014/12/22/openwrt-shadowsocks-chinadns/"/>
    <id>http://ferstar.github.io/2014/12/22/openwrt-shadowsocks-chinadns/</id>
    <published>2014-12-22T13:59:04.000Z</published>
    <updated>2015-09-02T01:30:46.000Z</updated>
    <content type="html"><![CDATA[<p>设备1:Buffalo WZR-HP-G300NH2 现运行固件:<a title="关于">DD-WRT v24-sp2 (03/29/14) giga</a></p>
<p>设备2:Linksys EA6500 现运行固件:OpenWrt Attitude Adjustment 12.09-beta</p>
<p>起先用设备2刷dd-wrt折腾ss两天无果，后来发现固件iptables和dnsmasq缺失转发参数支持，ss能够运行但无法穿墙，遂放弃，转投设备1，挑现成openwrt方案，问题主要集中在给这货刷openwrt上面，刷好openwrt后，按部就班非常顺利，几个关键字google，goagent，shadowsocks，chinadns……</p>
<p>贴几个折腾过程中的链接，不分先后（大部分是google+wiki获得）：</p>
<p><a href="http://www.right.com.cn/forum/thread-117225-1-1.html" target="_blank" rel="external">http://www.right.com.cn/forum/thread-117225-1-1.html</a></p>
<p><a href="https://github.com/posborne/wzr-hp-g300nh2-openwrt-flasher" target="_blank" rel="external">https://github.com/posborne/wzr-hp-g300nh2-openwrt-flasher</a></p>
<p><a href="http://sourceforge.net/projects/openwrt-dist/files/shadowsocks-libev/1.6.1-1e3ecb2/" target="_blank" rel="external">http://sourceforge.net/projects/openwrt-dist/files/shadowsocks-libev/1.6.1-1e3ecb2/</a></p>
<p><a href="http://hong.im/2014/03/16/configure-an-openwrt-based-router-to-use-shadowsocks-and-redirect-foreign-traffic/" target="_blank" rel="external">http://hong.im/2014/03/16/configure-an-openwrt-based-router-to-use-shadowsocks-and-redirect-foreign-traffic/</a></p>
<p>……</p>
<p>最后总结下，非主流方案比如dd-wrt+ss的组合最好少试，吃力不讨好；</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>设备1:Buffalo WZR-HP-G300NH2 现运行固件:<a title="关于">DD-WRT v24-sp2 (03/29/14) giga</a></p>
<p>设备2:Linksys EA6500 现运行固件:OpenWrt Attitude Adjust]]>
    </summary>
    
      <category term="归档" scheme="http://ferstar.github.io/categories/%E5%BD%92%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[syslink EA6500 v1刷dd-wrt需要注意的问题]]></title>
    <link href="http://ferstar.github.io/2014/12/19/ea6500-v1-flash-dd-wrt/"/>
    <id>http://ferstar.github.io/2014/12/19/ea6500-v1-flash-dd-wrt/</id>
    <published>2014-12-19T11:44:09.000Z</published>
    <updated>2015-09-02T01:29:18.000Z</updated>
    <content type="html"><![CDATA[<p>1.恢复出厂设置，或者捅菊花<br>2.升级官方最新固件<br>3.恢复出厂设置<br>4.刷dd。。。完全不需要传说中的303030大法<a id="more"></a></p>
<p>固件版本：DD-WRT v24-sp2 (03/29/14) giga - build 23838 //这个版本比较稳定，刷完WIFI自动开启，无需太多设置</p>
<p>&nbsp;</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>1.恢复出厂设置，或者捅菊花<br>2.升级官方最新固件<br>3.恢复出厂设置<br>4.刷dd。。。完全不需要传说中的303030大法]]>
    
    </summary>
    
      <category term="归档" scheme="http://ferstar.github.io/categories/%E5%BD%92%E6%A1%A3/"/>
    
  </entry>
  
</feed>
